[{"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\App.tsx":"2","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\index.tsx":"3","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\styles\\index.ts":"4","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\utils.ts":"5","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\NewNoteInput.tsx":"6","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\store\\notesReducer.ts":"7","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\store\\actions.ts":"8","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\store\\store.ts":"9","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\routes.tsx":"10","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\Sacola.tsx":"11","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\Pagamento.tsx":"12","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\Confirmacao.tsx":"13","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\ComponentTop.tsx":"14"},{"size":425,"mtime":1607985356107,"results":"15","hashOfConfig":"16"},{"size":189,"mtime":1616765756976,"results":"17","hashOfConfig":"16"},{"size":626,"mtime":1613172031825,"results":"18","hashOfConfig":"16"},{"size":4158,"mtime":1616889091572,"results":"19","hashOfConfig":"16"},{"size":231,"mtime":1612916183854,"results":"20","hashOfConfig":"16"},{"size":805,"mtime":1613181393241,"results":"21","hashOfConfig":"16"},{"size":455,"mtime":1613177755363,"results":"22","hashOfConfig":"16"},{"size":153,"mtime":1613177654189,"results":"23","hashOfConfig":"16"},{"size":165,"mtime":1613171985171,"results":"24","hashOfConfig":"16"},{"size":594,"mtime":1616767035520,"results":"25","hashOfConfig":"16"},{"size":5158,"mtime":1616866759535,"results":"26","hashOfConfig":"16"},{"size":6244,"mtime":1616887681620,"results":"27","hashOfConfig":"16"},{"size":5894,"mtime":1616888666605,"results":"28","hashOfConfig":"16"},{"size":823,"mtime":1616888470969,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"hrq8wl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\reportWebVitals.ts",[],["65","66"],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\App.tsx",[],["67","68"],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\index.tsx",[],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\styles\\index.ts",[],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\utils.ts",[],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\NewNoteInput.tsx",["69","70"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\n\r\ninterface NewNoteInputProps {\r\n  addNote(note: string): void;\r\n}\r\n\r\nconst NewNoteInput: React.FC<NewNoteInputProps> = ({ addNote }) => {\r\n  const [note, setNote] = useState(\"\");\r\n\r\n  const updateNote = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNote(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const onAddNoteClick = () => {\r\n    addNote(note);\r\n    setNote(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          onChange={updateNote}\r\n          value={note}\r\n          type=\"text\"\r\n          name=\"note\"\r\n          placeholder=\"note\"\r\n        />\r\n        <button onClick={onAddNoteClick}>add note</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewNoteInput;\r\n","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\store\\notesReducer.ts",[],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\store\\actions.ts",[],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\store\\store.ts",["71"],"import { create } from 'domain';\r\nimport {createStore} from 'redux';\r\nimport {notesReducer} from './notesReducer';\r\n\r\nexport const store = createStore(notesReducer);","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\routes.tsx",["72","73"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\n\r\nimport Sacola from \"./page/Sacola\";\r\nimport Pagamento from \"./page/Pagamento\";\r\nimport Confirmacao from \"./page/Confirmacao\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Sacola} />\r\n        <Route exact path=\"/pagamento\" component={Pagamento} />\r\n        <Route exact path=\"/pagamento/Confirmacao\" component={Confirmacao} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\Sacola.tsx",["74","75"],"C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\Pagamento.tsx",["76"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../styles/index\";\r\nimport { IData } from \"../types/index\";\r\n\r\nimport ComponentTop from \"./ComponentTop\";\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n  history: any;\r\n}\r\n\r\nconst App: React.FC<Props> = ({ history }) => {\r\n  const [data, setData] = useState<IData[]>();\r\n  const [selected, setSelected] = useState(\"PAGAMENTO\");\r\n  const [cardNumber, setCartNumber] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [cvv, setCvv] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      const URL_TO_FETCH = \"http://www.mocky.io/v2/5b15c4923100004a006f3c07\";\r\n      fetch(URL_TO_FETCH, {\r\n        method: \"get\", // opcional\r\n      })\r\n        .then(function (response) {\r\n          response.json().then((data) => {\r\n            setData(data.items);\r\n            console.log(data.items);\r\n          });\r\n        })\r\n        .catch(function (err) {\r\n          console.error(err);\r\n        });\r\n\r\n      setLoading(true);\r\n    }\r\n    init();\r\n  }, []);\r\n  const calculateTotalValue = (param: any) => {\r\n    const value = param as IData[];\r\n    const price: number[] = [];\r\n\r\n    value &&\r\n      value.forEach((element, index, arr) => {\r\n        price.push(element.product.priceSpecification.originalPrice);\r\n      });\r\n\r\n    const result = price.reduce((b, f) => b + f, 0);\r\n\r\n    return result || 0;\r\n  };\r\n\r\n  const formateCardNumber = (value: any) => {\r\n    return (\r\n      value\r\n        .replace(/\\s/g, \"\")\r\n        .match(/.{1,4}/g)\r\n        ?.join(\" \")\r\n        .substr(0, 19) || \"\"\r\n    );\r\n  };\r\n\r\n  const formateDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDate(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const myCalander = date\r\n      .replaceAll(\"-\", \" \")\r\n      .split(\" \")\r\n      .reverse()\r\n      .toString()\r\n      .replaceAll(\",\", \"-\");\r\n\r\n    const cardNumberCut = cardNumber.split(\" \");\r\n    const formated = `****.****.***.${cardNumberCut[3]}`;\r\n\r\n    const cardValue = {\r\n      cardNumber: formated,\r\n      title: title,\r\n      calendar: myCalander,\r\n      cvv: cvv,\r\n    };\r\n\r\n    const stringifiedArray = JSON.stringify(cardValue);\r\n    localStorage.setItem(\"data\", stringifiedArray);\r\n    history.push(\"/pagamento/confirmacao\");\r\n  };\r\n\r\n  const ComponentBottomValue = () => {\r\n    return (\r\n      <div className=\"main__bottom \">\r\n        <div className=\"details  box-shadow-2\">\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <span>PRODUTOS</span>\r\n            <span className=\"bold\">{calculateTotalValue(data)}</span>\r\n          </div>\r\n          <div>\r\n            <span>FRETES</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-orange bold\">DESCONTO</span>\r\n          </div>\r\n          <div className=\"justify-content__space-between\">\r\n            <span className=\"bold\">Total</span>\r\n            <span className=\"bold\">{calculateTotalValue(data)}</span>\r\n          </div>\r\n        </div>\r\n        <button className=\"bold\" style={{ fontSize: \"1.3em\" }}>\r\n          FINALIZAR PEDIDO\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {loading === true ? (\r\n        <form className=\"main box-shadow\" onSubmit={handleSubmit(onSubmit)}>\r\n          <ComponentTop selected={selected} />\r\n          <div className=\"grid\">\r\n            <h3 className=\"text-center text-gray\">CARTÃO DE CRÉDITO</h3>\r\n          </div>\r\n          <div className=\"main__middle column\">\r\n            <div className=\"grid\">\r\n              <label htmlFor=\"cart-number\" className=\"text-gray bold\">\r\n                Número do cartão\r\n              </label>\r\n              <input\r\n                onChange={(event) => {\r\n                  const { value } = event.target;\r\n                  setCartNumber(formateCardNumber(value));\r\n                }}\r\n                value={cardNumber}\r\n                ref={register}\r\n                id=\"cart-number\"\r\n                type=\"tel\"\r\n                inputMode=\"numeric\"\r\n                autoComplete=\"cc-number\"\r\n                pattern=\"[0-9\\s]{13,19}\"\r\n                maxLength={19}\r\n                placeholder=\"xxxx xxxx xxxx xxxx\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"grid\">\r\n              <label className=\"text-gray bold\" htmlFor=\"title\">\r\n                Nome do titulo\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                value={title}\r\n                required\r\n                onChange={(event) => setTitle(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"grid-2\">\r\n              <div>\r\n                <label htmlFor=\"date\" className=\"text-gray bold\">\r\n                  (dia/més/ano)\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={date}\r\n                  name=\"date\"\r\n                  id=\"date\"\r\n                  inputMode=\"numeric\"\r\n                  autoComplete=\"cc-number\"\r\n                  pattern=\"[0-9\\s]{13,19}\"\r\n                  maxLength={8}\r\n                  placeholder=\"xx/xxxx\"\r\n                  required\r\n                  onChange={(event) => formateDate(event)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"text-gray bold\" htmlFor=\"cvv\">\r\n                  CVV\r\n                </label>\r\n                <input\r\n                  id=\"cvv\"\r\n                  type=\"text\"\r\n                  minLength={4}\r\n                  maxLength={4}\r\n                  required\r\n                  onChange={(event) => setCvv(event.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ComponentBottomValue />\r\n        </form>\r\n      ) : (\r\n        <span>carregando...</span>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\Confirmacao.tsx",["77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../styles/index\";\r\nimport { IData } from \"../types/index\";\r\nimport ComponentTop from \"./ComponentTop\";\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n  history: any;\r\n}\r\n\r\ninterface FinalDate {\r\n  calendar: string;\r\n  cardNumber: string;\r\n  cvv: string;\r\n  title: string;\r\n}\r\nconst Confirmacao: React.FC<Props> = ({ history }) => {\r\n  const [data, setData] = useState<IData[]>();\r\n  const [finalDate, setFinalDate] = useState<FinalDate>();\r\n  const [selected, setSelected] = useState(\"CONFIRMACAO\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      const getLocalStorage = localStorage.getItem(\"data\");\r\n\r\n      if (getLocalStorage) {\r\n        setFinalDate(JSON.parse(getLocalStorage));\r\n      }\r\n\r\n      console.log(\"iniciando\");\r\n      const URL_TO_FETCH = \"http://www.mocky.io/v2/5b15c4923100004a006f3c07\";\r\n      fetch(URL_TO_FETCH, {\r\n        method: \"get\", // opcional\r\n      })\r\n        .then(function (response) {\r\n          response.json().then((data) => {\r\n            setData(data.items);\r\n          });\r\n        })\r\n        .catch(function (err) {\r\n          console.error(err);\r\n        });\r\n\r\n      setLoading(true);\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  function percentage(partialValue: number, totalValue: number) {\r\n    const value = (100 * partialValue) / totalValue;\r\n    return parseFloat(value.toFixed(2));\r\n  }\r\n\r\n  const calculateTotalValue = (param: any) => {\r\n    const value = param as IData[];\r\n    const price: number[] = [];\r\n\r\n    value &&\r\n      value.forEach((element, index, arr) => {\r\n        const { originalPrice } = element.product.priceSpecification;\r\n\r\n        price.push(originalPrice);\r\n      });\r\n\r\n    const result = price.reduce((b, f) => b + f, 0);\r\n\r\n    return result || 0;\r\n  };\r\n\r\n  const calculateDiscount = (param: any) => {\r\n    const discountArr: number[] = [];\r\n\r\n    param &&\r\n      param.forEach((element: IData) => {\r\n        const { discount } = element.product.priceSpecification;\r\n        const { originalPrice } = element.product.priceSpecification;\r\n\r\n        if (discount !== 0) {\r\n          const reciveDiscount = percentage(discount, originalPrice);\r\n          discountArr.push(reciveDiscount);\r\n        }\r\n      });\r\n\r\n    const result = discountArr.reduce((b, f) => b + f, 0);\r\n\r\n    return result || 0;\r\n  };\r\n\r\n  const calculateTotalValueDiscount = (param: any) => {\r\n    const value = param as IData[];\r\n    const price: number[] = [];\r\n\r\n    value &&\r\n      value.forEach((element, index, arr) => {\r\n        const {\r\n          discount,\r\n          originalPrice,\r\n          percent,\r\n        } = element.product.priceSpecification;\r\n\r\n        if (discount !== 0) {\r\n          const reciveDiscount = percentage(discount, originalPrice);\r\n          price.push(originalPrice - reciveDiscount);\r\n        } else {\r\n          price.push(originalPrice);\r\n        }\r\n      });\r\n\r\n    const result = price.reduce((b, f) => b + f, 0);\r\n\r\n    return result || 0;\r\n  };\r\n\r\n  const ComponentConfirmacao = () => {\r\n    return (\r\n      <div className=\"main box-shadow\" style={{ marginTop: \"230px\" }}>\r\n        <ComponentTop selected={selected} />\r\n        <div className=\"check-custom\">\r\n          <span>\r\n            <i className=\"fas fa-check\"></i>\r\n          </span>\r\n        </div>\r\n        <span className=\"text-orange text-center bold\">\r\n          PAGAMENTO EFETUADO COM SUCESSO\r\n        </span>\r\n        <div className=\"grid\">\r\n          <span className=\"text-gray bold\">PAGAMENTO</span>\r\n        </div>\r\n        <div className=\"grid details-about-user\">\r\n          <div>\r\n            <span>{finalDate?.cardNumber || \"xxxx\"}</span>\r\n            <span>{finalDate?.title || \"xxxx\"}</span>\r\n            <span>{finalDate?.calendar || \"xxxx\"}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid\">\r\n          <span className=\"text-center text-orange bold\">\r\n            COMPRA EFETUADA COM SUCESSO\r\n          </span>\r\n        </div>\r\n        <div className=\"grid\">\r\n          <h3 className=\"text-gray\">PRODUTOS</h3>\r\n        </div>\r\n        <div className=\"main__middle column\">\r\n          {data?.map((product) => {\r\n            return (\r\n              <div className=\"product\">\r\n                <div>\r\n                  <img\r\n                    src={product.product.imageObjects[0].large}\r\n                    alt=\"product content\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <span>{product.product.name}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"main__bottom\">\r\n          <div className=\"details  box-shadow-2\">\r\n            <div className=\"justify-content__space-between\">\r\n              <span>PRODUTOS</span>\r\n              <span className=\"bold\">{calculateTotalValue(data)}</span>\r\n            </div>\r\n            <div className=\"justify-content__space-between\">\r\n              <span>FRETES</span>\r\n              <span className=\"bold\">$R 5.30</span>\r\n            </div>\r\n            <div className=\"justify-content__space-between\">\r\n              <span className=\"text-orange bold\">DESCONTO</span>\r\n              <span className=\"bold\">R$ {calculateDiscount(data)}</span>\r\n            </div>\r\n            <div className=\"justify-content__space-between\">\r\n              <span className=\"bold\">Total</span>\r\n              <span className=\"bold\">\r\n                R$ {calculateTotalValueDiscount(data)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {loading === true ? <ComponentConfirmacao /> : <span>carregando...</span>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Confirmacao;\r\n","C:\\Users\\cecil\\Documents\\www\\react-js\\api-weather-forecast\\frontend\\src\\page\\ComponentTop.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":30,"nodeType":"87","messageId":"88","endLine":1,"endColumn":39},{"ruleId":"85","severity":1,"message":"89","line":1,"column":41,"nodeType":"87","messageId":"88","endLine":1,"endColumn":50},{"ruleId":"85","severity":1,"message":"90","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":16},{"ruleId":"85","severity":1,"message":"91","line":6,"column":3,"nodeType":"87","messageId":"88","endLine":6,"endColumn":11},{"ruleId":"85","severity":1,"message":"92","line":7,"column":3,"nodeType":"87","messageId":"88","endLine":7,"endColumn":13},{"ruleId":"85","severity":1,"message":"93","line":14,"column":20,"nodeType":"87","messageId":"88","endLine":14,"endColumn":31},{"ruleId":"85","severity":1,"message":"94","line":87,"column":11,"nodeType":"87","messageId":"88","endLine":87,"endColumn":18},{"ruleId":"85","severity":1,"message":"93","line":16,"column":20,"nodeType":"87","messageId":"88","endLine":16,"endColumn":31},{"ruleId":"85","severity":1,"message":"93","line":21,"column":20,"nodeType":"87","messageId":"88","endLine":21,"endColumn":31},{"ruleId":"85","severity":1,"message":"94","line":100,"column":11,"nodeType":"87","messageId":"88","endLine":100,"endColumn":18},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"@typescript-eslint/no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'create' is defined but never used.","'Redirect' is defined but never used.","'RouteProps' is defined but never used.","'setSelected' is assigned a value but never used.","'percent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]